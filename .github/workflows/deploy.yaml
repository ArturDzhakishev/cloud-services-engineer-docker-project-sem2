name: Docker Project Deploy

on:
  push:
    branches:
      - main

jobs:
  build_and_push_to_docker_hub:
      name: Push Docker image to DockerHub
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2
        - name: Login to Docker 
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push Backend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./backend/
            push: true
            tags: ${{ secrets.DOCKER_USER }}/docker-project-backend:latest
        - name: Push Frontend to DockerHub
          uses: docker/build-push-action@v4
          with:
            context: ./frontend/
            push: true
            tags: ${{ secrets.DOCKER_USER }}/docker-project-frontend:latest

  run-with-docker-compose:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build via Docker Compose
        uses: hoverkraft-tech/compose-action@v2.2.0

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build_and_push_to_docker_hub, run-with-docker-compose]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      
      - name: Copy project to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERSERV }}
          key: ${{ secrets.SSH_KEY }}
          source: "."
          target: "/home/user/project"

      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERSERV }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/user/project/ 
            sudo docker-compose -f docker-compose.yml pull
            sudo docker-compose -f docker-compose.yml down
            sudo docker-compose -f docker-compose.yml up -d --scale backend=1
